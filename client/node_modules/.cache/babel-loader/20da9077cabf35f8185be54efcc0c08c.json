{"ast":null,"code":"/** Import defaults */\nimport { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport userActiontypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.util\";\n/**Import actions */\n\nimport { signInSuccess, signInFailure, signOutFailure, signOutSuccess, signUpFailure, signUpSuccss } from \"./user.action\";\n/**Listeners for start */\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActiontypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActiontypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(userActiontypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n/**Common functions */\n\nexport function* getSnapshotFromUserAuth(userAuth, aditionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, aditionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n/** sign in functions */\n\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n/** sign out function */\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(userActiontypes.SIGN_OUT_START, signOut);\n}\n/** sign up functions */\n\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccss({\n      user,\n      aditionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    aditionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, aditionalData);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(userActiontypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(userActiontypes.SIGN_UP_START, signUp);\n}\n/** export functions */\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["/home/carlos/Documents/PersonalDev/react-course/ecommerce-shop/client/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","userActiontypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutFailure","signOutSuccess","signUpFailure","signUpSuccss","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithGoogle","onEmailSignInStart","EMAIL_SIGN_IN_START","signInWithEmail","onCheckUserSession","CHECK_USER_SESSION","isUserAuthenticated","getSnapshotFromUserAuth","userAuth","aditionalData","userRef","userSnapshot","get","id","data","error","user","signInWithPopup","payload","email","password","signInWithEmailAndPassword","signOut","onSignOutStart","SIGN_OUT_START","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignUp","onSignUpSuccess","SIGN_UP_SUCCESS","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["/** Import defaults */\nimport { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport userActiontypes from \"./user.types\";\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n  getCurrentUser,\n} from \"../../firebase/firebase.util\";\n/**Import actions */\nimport {\n  signInSuccess,\n  signInFailure,\n  signOutFailure,\n  signOutSuccess,\n  signUpFailure,\n  signUpSuccss,\n} from \"./user.action\";\n/**Listeners for start */\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActiontypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActiontypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(userActiontypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n/**Common functions */\nexport function* getSnapshotFromUserAuth(userAuth, aditionalData) {\n  try {\n    const userRef = yield call(\n      createUserProfileDocument,\n      userAuth,\n      aditionalData\n    );\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n/** sign in functions */\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\n/** sign out function */\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(userActiontypes.SIGN_OUT_START, signOut);\n}\n\n/** sign up functions */\n\nexport function* signUp({ payload: { email, password, displayName } }) {\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccss({ user, aditionalData: { displayName } }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\n\nexport function* signInAfterSignUp({ payload: { user, aditionalData } }) {\n  yield getSnapshotFromUserAuth(user, aditionalData);\n}\n\nexport function* onSignUpSuccess() {\n  yield takeLatest(userActiontypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\n\nexport function* onSignUpStart() {\n  yield takeLatest(userActiontypes.SIGN_UP_START, signUp);\n}\n\n/** export functions */\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n    call(onSignUpStart),\n    call(onSignUpSuccess),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}