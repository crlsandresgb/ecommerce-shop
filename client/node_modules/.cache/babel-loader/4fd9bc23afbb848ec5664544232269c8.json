{"ast":null,"code":"/**\n * import core\n */\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n/**\n * add config\n */\n\nconst config = {\n  apiKey: \"AIzaSyD9NQXfcb0aIiEgAWh7Qq2ja2kJeRCiFrI\",\n  authDomain: \"ecommerce-675e3.firebaseapp.com\",\n  databaseURL: \"https://ecommerce-675e3.firebaseio.com\",\n  projectId: \"ecommerce-675e3\",\n  storageBucket: \"ecommerce-675e3.appspot.com\",\n  messagingSenderId: \"265297597443\",\n  appId: \"1:265297597443:web:2c83da6d68258af26f6a36\",\n  measurementId: \"G-XS5KDVXQWT\"\n};\n/**\n * init firebase\n */\n\nfirebase.initializeApp(config);\n/**\n * create user function\n */\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  /**\n   * check if user is log in\n   */\n  if (!userAuth) return;\n  /**\n   * check if user exist on DB\n   */\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n  /**\n   * create user if the user exist\n   */\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    /**\n     * try to create user\n     */\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error);\n    }\n  }\n  /**\n   * retunr user\n   */\n\n\n  return userRef;\n};\n/**\n * add collections by get the collection key and items\n */\n\nexport const addCollectionsAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef);\n  /**set batch to lunch all at the same time */\n\n  const batch = firestore.batch();\n  /**add to batch */\n\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\n/**\n * convert collection to map\n */\n\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\n/**\n * export auth and firestore\n */\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n/**get current user */\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unSubscribe = auth.onAuthStateChanged(userAuth => {\n      unSubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\n/**\n * configure provider and google pop up\n */\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;","map":{"version":3,"sources":["/home/carlos/Documents/PersonalDev/react-course/ecommerce-shop/client/src/firebase/firebase.util.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","addCollectionsAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformCollection","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","accumulator","auth","getCurrentUser","Promise","resolve","reject","unSubscribe","onAuthStateChanged","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["/**\n * import core\n */\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n/**\n * add config\n */\nconst config = {\n  apiKey: \"AIzaSyD9NQXfcb0aIiEgAWh7Qq2ja2kJeRCiFrI\",\n  authDomain: \"ecommerce-675e3.firebaseapp.com\",\n  databaseURL: \"https://ecommerce-675e3.firebaseio.com\",\n  projectId: \"ecommerce-675e3\",\n  storageBucket: \"ecommerce-675e3.appspot.com\",\n  messagingSenderId: \"265297597443\",\n  appId: \"1:265297597443:web:2c83da6d68258af26f6a36\",\n  measurementId: \"G-XS5KDVXQWT\",\n};\n\n/**\n * init firebase\n */\nfirebase.initializeApp(config);\n/**\n * create user function\n */\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  /**\n   * check if user is log in\n   */\n  if (!userAuth) return;\n  /**\n   * check if user exist on DB\n   */\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n  /**\n   * create user if the user exist\n   */\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n    /**\n     * try to create user\n     */\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData,\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error);\n    }\n  }\n  /**\n   * retunr user\n   */\n  return userRef;\n};\n/**\n * add collections by get the collection key and items\n */\nexport const addCollectionsAndDocuments = async (\n  collectionKey,\n  objectsToAdd\n) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef);\n  /**set batch to lunch all at the same time */\n  const batch = firestore.batch();\n  /**add to batch */\n  objectsToAdd.forEach((obj) => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n\n  return await batch.commit();\n};\n\n/**\n * convert collection to map\n */\nexport const convertCollectionsSnapshotToMap = (collections) => {\n  const transformCollection = collections.docs.map((doc) => {\n    const { title, items } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items,\n    };\n  });\n  return transformCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\n/**\n * export auth and firestore\n */\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n/**get current user */\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unSubscribe = auth.onAuthStateChanged((userAuth) => {\n      unSubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\n/**\n * configure provider and google pop up\n */\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}